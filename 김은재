# 06 데이터 타입과 변수

**변수**

- 값의 위치를 기억하는 저장소

- 메모리 주소에 접근하기 위해 사람이 이해할 수 있는 언어로 명명한 식별자

**데이터 타입**

- 데이터의 종류

- 값의 종류에 따라 확보해야 할 메모리의 크기가 다름

**정적 타입(C,JAVA)**

- 변수 선언 시 변수에 저장할 값의 종류를 사전에 지정

**동적 타입(자바스크립트)**

- 변수의 차입 지정 없이 값이 할당되는 과정에서 자동으로 결정

## 1.데이터 타입

- 프로그래밍 언어에서 사용할 수 있는 데이터의 종류

**원시타입(boolean/null/underfined/number/string/symbol)**

- 변경 불가능한 값

1. number

- 하나의 숫자타입만 존재하며 모든 수를 실수로 처리한다

- `infinity`: 양의 무한대 `infinity`: 음의 무한대 `NaN`: 산술 연산 불가

2. string

- 텍스트 데이터를 나타내는데 사용

- 한번 생성된 문자열은 변경할 수 없다(재할당은 가능)

3. boolean

- 논리적 참, 거짓을 나타내는 true, false

- 비어있는 문자열, null, underfined, 0은 false

4. undefined

- 선언 후 값을 할당하지 않은 변수에 할당

- undefined타입의 값은 undefined가 유일

5. null

- 변수에 값이 없다는 걸 명시할 때 사용

- null타입의 값은 null이 유일

6. symbol

- 이름의 충돌 위험이 없는 유일한 객체의 프로퍼티 키를 만들기 위해 사용

**객체 타입**

- 데이터와 데이터에 관한 동작을 모두 포함하는 개념의 타입

1. object

## 2.변수

- 데이터에 고유의 이름인 식별자를 명시한 것
- var,let,const키워드로 선언/ 할당 연산자로 할당/ 변수명으로 참조

_중복선언_

- 중복 선언 시 에러없이 값을 덮어쓴다

_동적 타이핑_

- 같은 변수의 여러 타입의 값을 할당할 수 있음

_변수 호이스팅_

- 코드가 선언되지 않았어도 실행 전 선언문을 메모리에 등록하기 떄문에
- 순서와 관계없이 작동
